{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	// async function
	"af":{
		"prefix": "af",
		"body": [
			"async function ${1:Name}(){",
			"\t${2}",
			"}",
			"",
		],
		"description": "creates async normal function"
	},
	"aaf":{
		"prefix": "aaf",
		"body": [
			"const ${1:Name} = async () => {",
			"\t${2}",
			"}",
			"",
		],
		"description": "creates async arrow function"
	},


	// fetch function
	"fget":{
		"prefix": "fget",
		"body": [
			"const res = await fetch(${url},{",
				"\tmethod: 'GET',",
				"\theaders: {",
					"\t\t'Content-Type': 'application/json',",
				"\t},",
			"})",
			"const data = await res.json()",
			"",
		],
		"description": "creates a get fetch call"
	},
	"fpost":{
		"prefix": "fpost",
		"body": [
			"const res = await fetch(${url},{",
				"\tmethod: 'POST',",
				"\tbody: JSON.stringify(${body}),",
				"\theaders: {",
					"\t\t'Content-Type': 'application/json',",
				"\t},",
			"})",
			"const data = await res.json()",
			"",
		],
		"description": "creates a post fetch call"
	},
}